{"ast":null,"code":"var _jsxFileName = \"/Users/Amir/reactApp/todoapp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport ListItems from './ListItems';\nimport * as PaginationList from 'react-pagination-list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(faTrash);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      usersList: [],\n      isLoaded: false,\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    };\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n\n    if (newItem.text !== \"\") {\n      const items = [...this.state.items, newItem];\n      this.setState({\n        items: items,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      });\n    }\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    });\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item => item.key !== key);\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  setUpdate(text, key) {\n    console.log(\"items:\" + this.state.items);\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        console.log(item.key + \"    \" + key);\n        item.text = text;\n      }\n    });\n    this.setState({\n      items: items\n    });\n  }\n\n  componentDidMount() {\n    this.UserList();\n  }\n\n  UserList() {\n    fetch('https://reqres.in/api/users?page=2').then(data => data.json()).then(res => {\n      this.setState(() => {\n        const ar = res.data;\n        console.log(\"sdsd\", ar);\n        return {\n          usersList: ar\n        };\n      });\n    });\n  } // UserList() {\n  //   fetch('https://reqres.in/api/users?page=2')\n  //     .then(({ res }) => this.setState({   data: res.data.map(item => {\n  //       items=item.data\n  //     }) ,isLoaded:false}));\n  // }\n  //   UserList(){\n  //   fetch('https://reqres.in/api/users?page=2').then(res=>res.data.json()).then(json=>{\n  //     this.setState({\n  //       isLoaded:false,\n  //       items:json,\n  //     })\n  //   })\n  // }\n\n\n  render() {\n    const {\n      isLoaded,\n      usersList\n    } = this.state;\n\n    if (isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"to-do-form\",\n            onSubmit: this.addItem,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter to add Task\",\n              value: this.state.currentItem.text,\n              onChange: this.handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.items.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ListItems, {\n            items: this.state.items,\n            deleteItem: this.deleteItem,\n            setUpdate: this.setUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: usersList.map(list => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [list.first_name, \" \", list.last_name]\n          }, list.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Amir/reactApp/todoapp/src/App.js"],"names":["React","library","faTrash","ListItems","PaginationList","add","App","Component","constructor","props","state","items","usersList","isLoaded","currentItem","text","key","addItem","bind","handleInput","deleteItem","setUpdate","e","preventDefault","newItem","setState","target","value","Date","now","filteredItems","filter","item","console","log","map","componentDidMount","UserList","fetch","then","data","json","res","ar","render","list","first_name","last_name","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport ListItems from './ListItems'\nimport * as PaginationList from 'react-pagination-list';\n\nlibrary.add(faTrash)\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      items:[],\n      usersList:[],\n      isLoaded:false,\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.addItem = this.addItem.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if(newItem.text !==\"\"){\n      const items = [...this.state.items, newItem];\n    this.setState({\n      items: items,\n      currentItem:{\n        text:'',\n        key:''\n      }\n    })\n    }\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n  deleteItem(key){\n    const filteredItems= this.state.items.filter(item =>\n      item.key!==key);\n    this.setState({\n      items: filteredItems\n    })\n\n  }\n  setUpdate(text,key){\n    console.log(\"items:\"+this.state.items);\n    const items = this.state.items;\n    items.map(item=>{      \n      if(item.key===key){\n        console.log(item.key +\"    \"+key)\n        item.text= text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  componentDidMount() {\n    this.UserList();\n  }\n\n  UserList() {\n  fetch('https://reqres.in/api/users?page=2').then(data => data.json()).then(res =>{\n     this.setState(() =>{\n       const ar = res.data\n       console.log(\"sdsd\",ar)\n\n       return {\n        usersList: ar         \n       }\n     })\n    })\n  }\n  // UserList() {\n  //   fetch('https://reqres.in/api/users?page=2')\n  //     .then(({ res }) => this.setState({   data: res.data.map(item => {\n  //       items=item.data\n  //     }) ,isLoaded:false}));\n\n  // }\n//   UserList(){\n//   fetch('https://reqres.in/api/users?page=2').then(res=>res.data.json()).then(json=>{\n//     this.setState({\n//       isLoaded:false,\n//       items:json,\n//     })\n//   })\n// }\n\n render(){\n  const {isLoaded, usersList}=this.state;\n  if(isLoaded){\n     return <div>Loading...</div>\n  }\n\n  else{\n    return (\n      <div className=\"App\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input type=\"text\" placeholder=\"Enter to add Task\" value= {this.state.currentItem.text} onChange={this.handleInput}></input>\n            <button type=\"submit\">Add</button>\n          </form>\n          <p>{this.state.items.text}</p>\n          \n            <ListItems items={this.state.items} deleteItem={this.deleteItem} setUpdate={this.setUpdate}/>\n          \n        </header>\n     \n\n      <div>\n        {usersList.map(list => (\n          <li key={list.id}> \n           {list.first_name} {list.last_name}\n          </li>\n        ))}\n      </div>\n       {/* {usersList.map(user => (\n      <div className=\"user\">\n          <h3>{user.firstName}</h3>\n          <h3>{user.lastName}</h3>\n          <h3>{user.email}</h3>\n        </div>\n       ))} */}\n      </div>\n\n  \n    )\n  }\n\n\n \n }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}